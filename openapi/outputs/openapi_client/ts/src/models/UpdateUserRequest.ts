/* tslint:disable */
/* eslint-disable */
/**
 * tsunagaru
 * tsunagaru
 *
 * The version of the OpenAPI document: 1.0
 * Contact: codeyy021@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateUserRequest
 */
export interface UpdateUserRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    company?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    job?: string;
    /**
     * フロントエンドエンジニアなどのエンジニアとして詳細情報
     * @type {string}
     * @memberof UpdateUserRequest
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    bio?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    iconImageUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    twitterUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    githubUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    instagramUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    webUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    zennUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    qiitaUrl?: string;
}

/**
 * Check if a given object implements the UpdateUserRequest interface.
 */
export function instanceOfUpdateUserRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateUserRequestFromJSON(json: any): UpdateUserRequest {
    return UpdateUserRequestFromJSONTyped(json, false);
}

export function UpdateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'company': !exists(json, 'company') ? undefined : json['company'],
        'job': !exists(json, 'job') ? undefined : json['job'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'bio': !exists(json, 'bio') ? undefined : json['bio'],
        'iconImageUrl': !exists(json, 'icon_image_url') ? undefined : json['icon_image_url'],
        'twitterUrl': !exists(json, 'twitter_url') ? undefined : json['twitter_url'],
        'githubUrl': !exists(json, 'github_url') ? undefined : json['github_url'],
        'instagramUrl': !exists(json, 'instagram_url') ? undefined : json['instagram_url'],
        'webUrl': !exists(json, 'web_url') ? undefined : json['web_url'],
        'zennUrl': !exists(json, 'zenn_url') ? undefined : json['zenn_url'],
        'qiitaUrl': !exists(json, 'qiita_url') ? undefined : json['qiita_url'],
    };
}

export function UpdateUserRequestToJSON(value?: UpdateUserRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'email': value.email,
        'company': value.company,
        'job': value.job,
        'status': value.status,
        'bio': value.bio,
        'icon_image_url': value.iconImageUrl,
        'twitter_url': value.twitterUrl,
        'github_url': value.githubUrl,
        'instagram_url': value.instagramUrl,
        'web_url': value.webUrl,
        'zenn_url': value.zennUrl,
        'qiita_url': value.qiitaUrl,
    };
}

